'''Problem 2: Even Fibonacci Numbers

https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.'''


def fib(n: int) -> int:
    '''Return the nth Fibonacci number'''
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fib(n-1) + fib(n-2)


def sum_of_even_fibonacci_numbers(limit: int) -> int:
    '''Return sum of even Fibonacci numbers <= limit'''
    n = 0
    sum = 0
    while fib(n) <= limit:
        if fib(n) % 2 == 0:
            print(f'{n}th Fibonacci number, {fib(n)}, is even...')
            sum += fib(n)
        n += 1
    return sum


print(sum_of_even_fibonacci_numbers(limit=4e6))
